# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8]

    steps:
      - uses: actions/checkout@v2
 
      - name: Set up Postgresql with Postgis
        uses: huaxk/postgis-action@v1
        with:
          postgresql version: '11'
          postgresql user: 'postgres'
          postgresql password: 'Password12!'
          postgresql db: 'testdb_retriever'

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        env:
          LC_ALL : en_US.UTF-8
          ENV LANG : en_US.UTF-8
          ENV LANGUAGE : en_US.UTF-8
          TZ: America/New_York
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update && sudo apt-get install -y --no-install-recommends apt-utils
          sudo apt-get install -y --force-yes tzdata
          sudo apt-get install -y --force-yes build-essential wget git locales locales-all > /dev/null
          sudo apt-get install -y --force-yes libpq-dev
          sudo apt-get install -y --force-yes postgis
          
      - name: Setup paths and files
        run : |
          echo "export PATH="/usr/bin/python:$PATH"" >> ~/.profile
          echo "export PYTHONPATH="/usr/bin/python:$PYTHONPATH"" >> ~/.profile
          echo "localhost:*:*:postgres:Password12!" > ~/.pgpass
          echo "export PGPASSFILE="~/.pgpass"" >> ~/.profile
          chmod 0644 ~/.profile
      
      - name: PostGIS check version
        run : |
          export PGPASSWORD='Password12!'
          psql -d testdb_retriever -U postgres -h localhost -p 5432 -c "SELECT PostGIS_version();"

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest yapf codecov pytest-cov pytest-xdist -U
          python -m pip install psycopg2-binary h5py Pillow kaggle
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      
      - name: Install retriever
        run: |
          python -m pip install git+https://git@github.com/weecology/retriever.git
          export PGPASSFILE="~/.pgpass"
          chmod 600 ~/.pgpass

      - name: Run pytest -v
        run: |
          pytest -v -k "not sqlite"
